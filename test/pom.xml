<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>  

    <!--<parent>
        <groupId>com.abc.aem</groupId>
        <artifactId>abc-aem-parent</artifactId>
        <version>1.3.2</version>
    </parent>-->

    <groupId>com.abc.test</groupId>
    <artifactId>abcaem-test</artifactId>
    <version>${revision}-${env}</version>
    <packaging>pom</packaging>
    <name>abc AEM test</name>
    <description>abc IMG TOUCH AEM GUX</description>
	
    <properties>
        <revision>2.26.9</revision>
		<env>local</env>
		<!--   <aet.suitcase.name>dev-guxfoe</aet.suitcase.name> 
		<sonar.projectName>Dragonfly2.0</sonar.projectName>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
	        <sonar.findbugs.allowuncompiledcode>true</sonar.findbugs.allowuncompiledcode>-->
		<!-- Jacoco version to use -->
		<jacoco.version>0.8.6</jacoco.version>
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test 
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>-->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>
		<!--<sonar.host.url>http://localhost:9000</sonar.host.url>
			<sonar.login>2fe284a2f2b4a1875b27d36cc1cc87349bc06ce5</sonar.login>
			<sonar.password>bigstep</sonar.password>
			<sonar.sources>src\main\java\com\abc\test\core\servlets</sonar.sources>-->

  <sonar.organization>namitkochar18</sonar.organization>
  <sonar.host.url>https://sonarcloud.io</sonar.host.url>
<sonar.login>70d7b07410229e3a168aaf4bee5196b6525ae108</sonar.login>
    </properties>

    <modules>
       
        <module>test-core</module>
        
    </modules>

    <dependencyManagement>
        <dependencies>
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>16.0.1</version>
			</dependency>
		
			<!--<dependency>
		    		<groupId>org.sonarsource.scanner.maven</groupId>
    				<artifactId>sonar-maven-plugin</artifactId>
    				<version>3.7.0.1746</version>
			</dependency>-->
		
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.cmpn</artifactId>
				<version>6.0.0</version>
				<scope>provided</scope>
			</dependency>
		
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.framework</artifactId>
				<version>1.9.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.metatype.annotations</artifactId>
				<version>1.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.component.annotations</artifactId>
				<version>1.3.0</version>
				<scope>provided</scope>
				</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-atinject_1.0_spec</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.api</artifactId>
				<version>2.22.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.jcr.api</artifactId>
				<version>2.4.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.models.api</artifactId>
				<version>1.3.6</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.8.1</version>
			</dependency>
			<dependency>
				<groupId>com.adobe.aem</groupId>
				<artifactId>uber-jar</artifactId>
				<version>6.5.10</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.9.1</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>13.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>4.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-osgi-bundle</artifactId>
				<version>1.2.51</version>
			</dependency>
			<dependency>
				<groupId>org.hashids</groupId>
				<artifactId>hashids</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.wcm</groupId>
				<artifactId>io.wcm.testing.aem-mock</artifactId>
				<version>2.2.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId> 
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
			</dependency>
			
        </dependencies>
    </dependencyManagement>
    <profiles>
        <profile>
            <id>with-integration-tests</id>
            <modules>
                <module>ui.tests</module>
            </modules>
        </profile>
	    <profile>
			<id>coverage</id>
    <build>
    <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${jacoco.agent.ut.arg}</argLine>
                    <!-- Specific to generate mapping between tests and covered code -->
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                    <!-- test failure ignore -->
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx3g -XX:MaxPermSize=768m ${jacoco.agent.it.arg}
                    </argLine>
                    <!-- Specific to generate mapping between tests and covered code -->
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                    <!-- Let's put failsafe reports with surefire to have access to tests 
                        failures/success reports in sonar -->
                    <reportsDirectory>${project.build.directory}/surefire-reports
                    </reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
	</profile>
        <profile>
		  <id>autoInstallPackageAuthor</id>
		  <build>
			<pluginManagement>
			  <plugins>				
				<plugin>
				  <groupId>com.day.jcr.vault</groupId>
				  <artifactId>content-package-maven-plugin</artifactId>
				  <executions>
					<execution>
					  <id>install-package-author</id>
					  <goals>
						<goal>install</goal>
					  </goals>
					  <configuration>
						<targetURL>${aem.protocol}://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
					  </configuration>
					</execution>
				  </executions>
				</plugin>
			  </plugins>
			</pluginManagement>
		  </build>
		</profile>
		<profile>
		  <id>autoInstallPackageCIPublish</id>
		  <build>
			<pluginManagement>
			  <plugins>
				<plugin>
				  <groupId>com.day.jcr.vault</groupId>
				  <artifactId>content-package-maven-plugin</artifactId>
				  <executions>
					<execution>
					  <id>install-package-publish</id>
					  <goals>
						<goal>install</goal>
					  </goals>
					  <configuration>
						<targetURL>${aem.protocol}://${aem.publish.host}:${aem.publish.port}/crx/packmgr/service.jsp</targetURL>
					  </configuration>
					</execution>
				  </executions>
				</plugin>
			  </plugins>
			</pluginManagement>
		  </build>
		</profile>
		<profile>
		  <id>autoInstallBundle</id>
		  <build>
			<pluginManagement>
			  <plugins>
				<plugin>
				  <groupId>org.apache.sling</groupId>
				  <artifactId>sling-maven-plugin</artifactId>
				  <executions>
					<execution>
					  <id>install-bundle-author</id>
					  <goals>
						<goal>install</goal>
					  </goals>
					  <configuration>
						<slingUrl>${aem.protocol}://${aem.host}:${aem.port}/system/console</slingUrl>
					  </configuration>
					</execution>
				  </executions>
				</plugin>
			  </plugins>
			</pluginManagement>
		  </build>
		</profile>
    </profiles>

</project>
